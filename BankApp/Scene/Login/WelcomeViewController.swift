//
//  WelcomeViewController.swift
//  BankApp
//
//  Created by Anderson Lentz on 03/08/19.
//  Copyright (c) 2019 Anderson Lentz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class
{
    func displayStatements(viewModel: Login.UserLogin.ViewModel)
    func displayWarningLoginMessage(response:Login.UserLogin.Response)
}

class LoginViewController: UIViewController, LoginDisplayLogic
{
    
    
    var interactor: WelcomeBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = WelcomeInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.hideKeyboardWhenTappedAround()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        clean()
    }
    
    
    
    // MARK: Do login
    
    @IBOutlet weak var loginIndicator: UIActivityIndicatorView!
    @IBOutlet weak var userTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    @IBAction func loginButton(_ sender: UIButton) {
        login()
    }
    
    
    func login(){
        let userID = userTextField.text ?? ""
        let password = passwordTextField.text ?? ""
        let request = Login.UserLogin.Request(userID: userID, password: password)
        showLoginIndicatory()
        interactor?.login(request: request)
    }
    
    func displayStatements(viewModel: Login.UserLogin.ViewModel)
    {
        
        if viewModel.success {
            router?.routeStatements(segue: nil)
        } else {
            stopLoginIndicator()
            userTextField.text = nil
            passwordTextField.text = nil
        }
    }
    
    func displayWarningLoginMessage(response: Login.UserLogin.Response) {
        stopLoginIndicator()
        let alert = UIAlertController(title: "Atenção", message: response.message, preferredStyle: .alert)
        let defaultAction = UIAlertAction(title: "Ok", style: .default, handler: nil)
        alert.addAction(defaultAction)
        self.present(alert, animated: true, completion: nil)
    }
    
    func showLoginIndicatory() {
        loginIndicator.startAnimating()
    }
    
    func stopLoginIndicator(){
        loginIndicator.stopAnimating()
    }
    
    func clean(){
        stopLoginIndicator()
        userTextField.text = ""
        passwordTextField.text = ""
    }
}

extension LoginViewController {
    func hideKeyboardWhenTappedAround() {
        let tap: UITapGestureRecognizer =  UITapGestureRecognizer(target: self, action:    #selector(LoginViewController.dismissKeyboard))
        tap.cancelsTouchesInView = false
        view.addGestureRecognizer(tap)
    }
    @objc func dismissKeyboard() {
        view.endEditing(true)
        
    }
}
